{"ast":null,"code":"import { EventEmitter } from \"events\";\nimport Deck from '../models/Deck';\nimport dispatcher from \"../dispatcher/dispatcher\";\n\nclass DeckStore extends EventEmitter {\n  constructor(deck = new Deck()) {\n    super();\n    this.deckCard = deck;\n    this.card = null;\n  }\n\n  startGame() {\n    this.getAll();\n    this.emit(\"start\");\n  }\n\n  playCard() {\n    this.card = this.deckCard.pop();\n    this.emit(\"dealOneCard\");\n  }\n\n  shuffleDeck() {\n    this.card = this.deckCard.shuffleCards();\n  }\n\n  getAll() {\n    return this.deckCard.cards;\n  }\n\n  handleActions(action) {\n    switch (action.type) {\n      case \"START-GAME\":\n        {\n          this.startGame();\n          break;\n        }\n\n      case \"PLAY-CARD\":\n        {\n          this.playCard();\n          this.startGame();\n          break;\n        }\n\n      case \"SHUFFLE\":\n        {\n          this.shuffleDeck();\n          break;\n        }\n    }\n  }\n\n}\n\nconst deckStore = new DeckStore();\ndispatcher.register(deckStore.handleActions.bind(deckStore));\nexport default deckStore;","map":{"version":3,"sources":["/Users/john/Desktop/WebProjects/deck-card/src/store/store.js"],"names":["EventEmitter","Deck","dispatcher","DeckStore","constructor","deck","deckCard","card","startGame","getAll","emit","playCard","pop","shuffleDeck","shuffleCards","cards","handleActions","action","type","deckStore","register","bind"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,QAA3B;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,SAAN,SAAwBH,YAAxB,CAAoC;AAChCI,EAAAA,WAAW,CAACC,IAAI,GAAG,IAAIJ,IAAJ,EAAR,EAAoB;AAC3B;AACA,SAAKK,QAAL,GAAgBD,IAAhB;AACA,SAAKE,IAAL,GAAY,IAAZ;AACH;;AACDC,EAAAA,SAAS,GAAE;AACP,SAAKC,MAAL;AACA,SAAKC,IAAL,CAAU,OAAV;AACH;;AACDC,EAAAA,QAAQ,GAAE;AACN,SAAKJ,IAAL,GAAY,KAAKD,QAAL,CAAcM,GAAd,EAAZ;AACA,SAAKF,IAAL,CAAU,aAAV;AACH;;AACDG,EAAAA,WAAW,GAAE;AACT,SAAKN,IAAL,GAAY,KAAKD,QAAL,CAAcQ,YAAd,EAAZ;AACH;;AACDL,EAAAA,MAAM,GAAE;AACJ,WAAO,KAAKH,QAAL,CAAcS,KAArB;AACH;;AACDC,EAAAA,aAAa,CAACC,MAAD,EAAQ;AACjB,YAAQA,MAAM,CAACC,IAAf;AACI,WAAK,YAAL;AAAkB;AACd,eAAKV,SAAL;AACA;AACH;;AACD,WAAK,WAAL;AAAiB;AACb,eAAKG,QAAL;AACA,eAAKH,SAAL;AACA;AACH;;AACD,WAAK,SAAL;AAAe;AACX,eAAKK,WAAL;AACA;AACH;AAbL;AAgBH;;AArC+B;;AAuCpC,MAAMM,SAAS,GAAG,IAAIhB,SAAJ,EAAlB;AACAD,UAAU,CAACkB,QAAX,CAAoBD,SAAS,CAACH,aAAV,CAAwBK,IAAxB,CAA6BF,SAA7B,CAApB;AACA,eAAeA,SAAf","sourcesContent":["import {EventEmitter} from \"events\";\r\nimport Deck from '../models/Deck';\r\nimport dispatcher from \"../dispatcher/dispatcher\";\r\n\r\nclass DeckStore extends EventEmitter{\r\n    constructor(deck = new Deck()) {\r\n        super();\r\n        this.deckCard = deck;\r\n        this.card = null;\r\n    }\r\n    startGame(){\r\n        this.getAll();\r\n        this.emit(\"start\");\r\n    }\r\n    playCard(){\r\n        this.card = this.deckCard.pop();\r\n        this.emit(\"dealOneCard\");\r\n    }\r\n    shuffleDeck(){\r\n        this.card = this.deckCard.shuffleCards();\r\n    }\r\n    getAll(){\r\n        return this.deckCard.cards;\r\n    }\r\n    handleActions(action){\r\n        switch (action.type){\r\n            case \"START-GAME\":{\r\n                this.startGame();\r\n                break;\r\n            }\r\n            case \"PLAY-CARD\":{\r\n                this.playCard();\r\n                this.startGame();\r\n                break;\r\n            }\r\n            case \"SHUFFLE\":{\r\n                this.shuffleDeck();\r\n                break;\r\n            }\r\n\r\n        }\r\n    }\r\n}\r\nconst deckStore = new DeckStore();\r\ndispatcher.register(deckStore.handleActions.bind(deckStore));\r\nexport default deckStore;\r\n"]},"metadata":{},"sourceType":"module"}